{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 package lab;\
\
//Java program for Naive Pattern Searching \
import java.io.BufferedReader;\
import java.io.*;\
import java.io.File;\
import java.io.FileReader;\
import java.util.*;\
import java.util.regex.Pattern;\
\
public class bruteForce \{\
\
	public static void search(String sequence, String query) \
	\{\
		int sequence_length = sequence.length();\
		int query_length = query.length();\
		\
		int i = 0;\
		\
		for (i=0; i <= sequence_length - query_length; i++)\
		//i is the index we are currently testing for this loop\
		\{\
			int j;\
			\
			for (j=0; j < query_length; j++)\
			//j is the index of query we are testing\
			//if char no longer matches, for loop for j breaks\
			\{\
				if (sequence.charAt(i + j) != query.charAt(j))\
					break;\
			\}\
					\
			if (j == query_length) //only if all char in query is match then we will print\
				System.out.println("Occurence at index " + i); \
		\}\
	\}\
	\
	public static void main(String[] args) throws Exception\
	//allow user to enter sequence and query before running search function\
	\{\
		//Create a new file object and read in the file.\
		File VIRUS = new File("/Users/russellleung/Desktop/virus.fna");\
		BufferedReader fileReadIn = new BufferedReader(new FileReader(VIRUS));\
		\
		String text;\
		String full ="";\
		String pattern = "ATG";\
		\
		//Concatenate each row of the file DNA sequence into a single string.\
		while((text = fileReadIn.readLine()) != null)\
		\{\
			full += text;\
		\}\
\
		//Close the file stream.\
		fileReadIn.close();\
		\
		long startTime = System.nanoTime();\
		\
		search(full, pattern);\
		\
		long endTime   = System.nanoTime();\
		long totalTime = endTime - startTime;\
		System.out.println(totalTime);\
	\}\
\}\
}